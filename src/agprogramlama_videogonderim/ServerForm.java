/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package agprogramlama_videogonderim;

import java.io.*;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author huseyinozkan
 */
public class ServerForm extends javax.swing.JFrame {

    /**
     * Creates new form ServerForm
     */
    public ServerForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        edtBilgi = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        btnServerAktiflestir = new javax.swing.JButton();
        lblServerAktiflestir = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server");
        setBounds(new java.awt.Rectangle(300, 100, 800, 500));
        setResizable(false);

        edtBilgi.setColumns(20);
        edtBilgi.setRows(5);
        edtBilgi.setEnabled(false);
        jScrollPane1.setViewportView(edtBilgi);

        jLabel4.setText("Bilgi");

        btnServerAktiflestir.setText("Server Aktifleştir");
        btnServerAktiflestir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServerAktiflestirActionPerformed(evt);
            }
        });

        lblServerAktiflestir.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnServerAktiflestir, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblServerAktiflestir)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 760, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnServerAktiflestir)
                    .addComponent(lblServerAktiflestir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnServerAktiflestirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServerAktiflestirActionPerformed
        try {
            ButtonServerAktiflestir_Click();
        } catch (IOException ex) {
            Logger.getLogger(ServerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnServerAktiflestirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnServerAktiflestir;
    private javax.swing.JTextArea edtBilgi;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblServerAktiflestir;
    // End of variables declaration//GEN-END:variables

    private void ButtonServerAktiflestir_Click() throws SocketException, IOException {
        btnServerAktiflestir.setEnabled(false);
        lblServerAktiflestir.setText("Server Aktifleştirildi");

        Server server = new Server();
        server.start();
    }

    class Server extends Thread {

        @Override
        public void run() {

            try {
                DatagramSocket serverSocket = new DatagramSocket(ServerCommon.PortNumber);

                while (true) {
                    ServerCommon.bilgi = "";

                    // Gelen Veriler Alınıyor.
                    DatagramPacket receivePacket = new DatagramPacket(ServerCommon.receiveData, ServerCommon.receiveData.length);
                    serverSocket.receive(receivePacket);
                    String gelen = new String(receivePacket.getData(), 0, receivePacket.getLength());
                    //System.out.println(gelen);

                    if (gelen.split("-")[0].equals("baslangic")) {
                        ServerCommon.hedefBaslangic = 0;
                        ServerCommon.gelenDosyaAdi = gelen.split("-")[1];
                        ServerCommon.HedefBytes = new byte[Integer.parseInt(gelen.split("-")[2])];
                    } else if (gelen.equals("bitis")) {
                        if (Functions.ConvertBytesToFile(ServerCommon.HedefBytes, ServerCommon.Path + ServerCommon.gelenDosyaAdi)) {
                            ServerCommon.bilgi += "Dosya Adı: " + ServerCommon.gelenDosyaAdi + "\n";
                            ServerCommon.bilgi += "Boyut: " + ServerCommon.HedefBytes.length + "\n";
                            ServerCommon.bilgi += "Adres: " + receivePacket.getAddress() + "\n\n";
                            edtBilgi.setText(ServerCommon.bilgi + edtBilgi.getText());

                            ProcessBuilder builder = new ProcessBuilder("sh", "-c", "nemo " + ServerCommon.Path);
                            builder.start();
                        } else {
                            edtBilgi.setText(ServerCommon.bilgi + edtBilgi.getText());
                        }

                    } else {
                        Functions.TamponBirlestir(receivePacket.getData());
                    }
                } // while bitti
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
                edtBilgi.setText("Hata : " + ex.getMessage() + "\n"
                        + "Tekrar Deneyiniz \n\n" + edtBilgi.getText());
            }

        }
    }
}
